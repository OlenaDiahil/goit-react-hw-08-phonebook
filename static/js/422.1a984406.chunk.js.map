{"version":3,"file":"static/js/422.1a984406.chunk.js","mappings":"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","sources":["components/Register/Register.styled.js","components/Register/Register.jsx","pages/RegisterPage.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from '@emotion/styled'\nimport { NavLink } from \"react-router-dom\";\n\nexport const FormContainer = styled.div`\n  text-align: center;\n  margin: 50px auto;\n  max-width: 400px;\n  padding: 20px;\n  background-color: #FFFFFF;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n`;\n\nexport const FormTitle = styled.h2`\n  font-size: 24px;\n  margin-bottom: 20px;\n  color: transparent;\n  background: linear-gradient(45deg, #2AF598, #009EFD);\n  -webkit-background-clip: text;\n  background-clip: text;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const FormGroup = styled.div`\n  margin-bottom: 16px;\n`;\n\nexport const Label = styled.label`\n  font-size: 16px;\n  margin-bottom: 8px;\n  color: #071015;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #656565;\n  border-radius: 5px;\n  font-size: 16px;\n`;\n\nexport const SubmitButton = styled.button`\n  background-color: #2AF598;\n  color: #FFFFFF;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  font-size: 18px;\n  cursor: pointer;\n`;\n\nexport const AlreadyHaveAccountText = styled.p`\n  font-size: 16px;\n  margin-bottom: 10px;\n  color: #656565;\n`;\n\nexport const SignInLinkContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const SignInLink = styled(NavLink)`\n  text-decoration: none;\n  color: #009EFD;\n  font-weight: bold;\n`;","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useLoginMutation, useRegisterMutation } from \"redux/auth\";\nimport { setToken } from \"redux/auth/authSlice\";\nimport { Form, AlreadyHaveAccountText, FormContainer, FormGroup, FormTitle, Input, Label, SignInLink, SignInLinkContainer, SubmitButton } from \"./Register.styled\";\n\nconst INITIAL_STATE = {\n  email: \"\",\n  name: \"\",\n  password: \"\",\n};\n\nexport default function Register() {\n  const [formData, setFormData] = useState({ ...INITIAL_STATE });\n  const [register] = useRegisterMutation();\n  const [login] = useLoginMutation();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(formData)\n\n    if (formData.email && formData.name && formData.password) {\n      const response = await register(formData);\n\n      if (response) {\n        const { data } = await login({\n          email: formData.email,\n          password: formData.password,\n        });\n        console.log(data.token)\n        dispatch(setToken(data.token));\n        navigate(\"/contacts\");\n      }\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setFormData(INITIAL_STATE);\n  };\n\n  return (\n    <FormContainer>\n      <Form onSubmit={handleSubmit}>\n        <FormTitle>Sign up</FormTitle>\n        <FormGroup>\n          <Label htmlFor=\"name\">Name</Label>\n          <Input\n            name=\"name\"\n            type=\"text\"\n            autoComplete=\"name\"\n            required\n            value={formData.name}\n            onChange={handleChange}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label htmlFor=\"email\">Email</Label>\n          <Input\n            name=\"email\"\n            type=\"email\"\n            autoComplete=\"email\"\n            required\n            value={formData.email}\n            onChange={handleChange}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label htmlFor=\"password\">Password</Label>\n          <Input\n            name=\"password\"\n            type=\"password\"\n            required\n            value={formData.password}\n            onChange={handleChange}\n          />\n        </FormGroup>\n        <SubmitButton type=\"submit\">Sign up</SubmitButton>\n      </Form>\n      <AlreadyHaveAccountText>Already have an account?</AlreadyHaveAccountText>\n      <SignInLinkContainer>\n        <SignInLink to=\"/login\">Sign in</SignInLink>\n      </SignInLinkContainer>\n    </FormContainer>\n  );\n}","import Register from 'components/Register/Register'\nimport React from 'react'\n\nfunction RegisterPage() {\n  return (\n    <div>\n        <Register/> \n    </div>\n  )\n}\n\nexport default RegisterPage;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["FormContainer","styled","FormTitle","Form","FormGroup","Label","Input","SubmitButton","AlreadyHaveAccountText","SignInLinkContainer","SignInLink","NavLink","INITIAL_STATE","email","name","password","Register","useState","formData","setFormData","useRegisterMutation","register","useLoginMutation","login","dispatch","useDispatch","navigate","useNavigate","handleChange","e","target","value","prevState","handleSubmit","preventDefault","console","log","data","token","setToken","reset","onSubmit","htmlFor","type","autoComplete","required","onChange","to","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}