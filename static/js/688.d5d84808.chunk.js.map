{"version":3,"file":"static/js/688.d5d84808.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/ContactList/ContactList.Styled.js","components/ContactList/ContactList.js","components/ContactsForm/ContactForm.Styled.js","components/ContactsForm/ContactsForm.js","components/Filter/Filter.Styled.js","components/Filter/Filter.js","components/UserMenu/UserMenu.Styled.js","components/UserMenu/UserMenu.jsx","pages/ContactsPage.jsx"],"sourcesContent":["const Loader = () => {\n  return (\n    <div>\n      <p>Load...</p>\n    </div>\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\n\nconst primaryColor = '#2AF598';\nconst whiteColor = '#FFFFFF';\nconst blackColor = '#071015';\n\n\nexport const ContactListContainer = styled.div`\n  text-align: center;\n  margin: 20px;\n  ul {\n    list-style-type: none;\n    padding: 0;\n  }\n  li {\n    font-size: 16px;\n    color: ${blackColor};\n    margin-bottom: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    button {\n      background-color: ${primaryColor};\n      color: ${whiteColor};\n      padding: 5px 10px;\n      border: none;\n      border-radius: 5px;\n      font-size: 14px;\n      cursor: pointer;\n    }\n  }\n`;","import { useSelector} from 'react-redux';\nimport Loader from 'components/Loader/Loader';\nimport { useDeleteContactMutation, useGetContactsQuery } from 'redux/contactsApi';\nimport { ContactListContainer } from './ContactList.Styled';\n\nexport const ContactList = () => {\n  const token = useSelector(state => state.auth.token);\n  const { data: contacts, isLoading, error } = useGetContactsQuery(token);\n  const { filter } = useSelector(state => state.filter);\n  const [deleteContact] = useDeleteContactMutation();\n\n  if (isLoading && !error) {\n    return (\n      <div>\n        <Loader />\n      </div>\n    );\n  }\n  if (error) {\n    return (\n      <div>\n        <p>Ooops!!! Something went wrong!</p>\n        <p>Error:{error}</p>\n      </div>\n    );\n  }\n\n  const getFilteredContacts = () => {\n    return (contacts || []).filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <ContactListContainer>\n      <ul>\n        {filteredContacts.map(({ id, name, number }) => (\n          <li key={id}>\n             {name}: {number}\n            <button\n              type=\"button\"\n              onClick={() => deleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </ContactListContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nconst primaryColor = '#2AF598';\nconst secondaryColor = '#009EFD';\nconst whiteColor = '#FFFFFF';\nconst grayColor = '#656565';\n\n\nexport const FormContainer = styled.div`\n  text-align: center;\n  margin: 20px;\n  form {\n    h2 {\n      font-size: 20px;\n      margin-bottom: 10px;\n      background: linear-gradient(45deg, ${primaryColor}, ${secondaryColor});\n      -webkit-background-clip: text;\n      background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n    input {\n      width: 100%;\n      padding: 10px;\n      margin-bottom: 16px;\n      border: 1px solid ${grayColor};\n      border-radius: 5px;\n      font-size: 16px;\n    }\n    button {\n      background-color: ${primaryColor};\n      color: ${whiteColor};\n      padding: 10px 20px;\n      border: none;\n      border-radius: 5px;\n      font-size: 18px;\n      cursor: pointer;\n    }\n  }\n`;","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport Notiflix from 'notiflix';\nimport { useAddContactMutation, useGetContactsQuery } from 'redux/contactsApi';\nimport { FormContainer } from './ContactForm.Styled';\n\nexport const ContactsForm = () => {\n  const [addContact] = useAddContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const handleFormSubmit = evt => {\n    evt.preventDefault();\n    const contact = {id: nanoid(), name, number };\n    const normalizedFind = name.toLocaleLowerCase();\n    contacts.find(contact => contact.name.toLocaleLowerCase() === normalizedFind)\n      ? Notiflix.Notify.warning(`${name} is already in contacts!`)\n      : addContact(contact);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormContainer>\n      <form onSubmit={handleFormSubmit}>\n        <h2>Name</h2>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <h2>Number</h2>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <button type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </FormContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nconst blackColor = '#071015';\nconst grayColor = '#656565';\n\nexport const FilterContainer = styled.div`\n  text-align: center;\n  margin: 20px;\n  label {\n    font-size: 18px;\n    color: ${blackColor};\n  }\n  input {\n    width: 100%;\n    padding: 10px;\n    margin-top: 8px;\n    border: 1px solid ${grayColor};\n    border-radius: 5px;\n    font-size: 16px;\n  }\n`;","import { useDispatch } from 'react-redux';\nimport {filterChanges } from 'redux/filterSlice';\nimport { FilterContainer } from './Filter.Styled';\n\nexport const Filter = ({ searchInputId }) => {\n  const dispatch = useDispatch();\n  const changeFilter = event => {\n    const { value } = event.currentTarget;\n    dispatch(filterChanges(value));\n  };\n\n  return (\n    <FilterContainer>\n      <label htmlFor={searchInputId}>Find contacts by name</label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={changeFilter}\n        id={searchInputId}\n      />\n    </FilterContainer>\n  );\n};\n","import styled from '@emotion/styled'\n\nconst primaryColor = '#2AF598';\nconst secondaryColor = '#009EFD';\nconst whiteColor = '#FFFFFF';\nconst blackColor = '#071015';\n\nexport const WelcomeContainer = styled.div`\n    display: flex; \n    align-items: center; \n    justify-content: space-around;\n    align-items: baseline;\n    gap: 40px;\n    text-align: center;\n    margin: 20px;\n    span {\n        color: transparent;\n        font-size: 20px; \n        font-weight: bold; \n        background: linear-gradient(90deg, ${primaryColor}, ${secondaryColor});\n        -webkit-background-clip: text;\n        background-clip: text;\n        display: inline;\n    }\n    p {\n        font-size: 18px;\n        color: ${blackColor};\n        margin-bottom: 10px;\n    }\n    button {\n        background-color: ${primaryColor};\n        color: ${whiteColor};\n        padding: 10px 20px;\n        border: none;\n        border-radius: 5px;\n        font-size: 16px;\n        cursor: pointer;\n    }\n`;","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetCurrentUserQuery } from 'redux/auth';\nimport { logOut } from 'redux/auth/authSlice';\nimport { WelcomeContainer } from './UserMenu.Styled';\n\nfunction UserMenu() {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const token = useSelector(state => state.auth.token);\n    const { data, isLoading } = useGetCurrentUserQuery(token);\n\n    const handleLogOut = () => {\n        dispatch(logOut());\n        navigate(\"/login\");\n    }\n\n    return (\n        <WelcomeContainer>\n            <p>Welcome {isLoading ? 'Your name ...' : <span>{data.name}</span>}</p>\n            <button type=\"button\" onClick={handleLogOut}>Logout</button>\n        </WelcomeContainer>\n    );\n}\n\nexport default UserMenu;","import { ContactList } from 'components/ContactList/ContactList'\nimport { ContactsForm } from 'components/ContactsForm/ContactsForm'\nimport { Filter } from 'components/Filter/Filter'\nimport UserMenu from 'components/UserMenu/UserMenu'\nimport React from 'react'\n\nimport styled from '@emotion/styled';\nconst blackColor = '#071015';\n\nconst PageContainer = styled.div`\n  text-align: center;\n  margin: 20px;\n`;\n\nconst PageTitle = styled.h2`\n  font-size: 24px;\n  color: ${blackColor};\n  margin-bottom: 20px;\n`;\n\nfunction ContactsPage() {\n  return (\n    <PageContainer>\n      <UserMenu/>\n      <PageTitle>ContactsForm</PageTitle>\n      <ContactsForm />\n      <PageTitle>Contacts</PageTitle>\n      <Filter />\n      <ContactList />    \n    </PageContainer>\n  )\n}\n\nexport default ContactsPage;\n"],"names":["ContactListContainer","styled","ContactList","token","useSelector","state","auth","useGetContactsQuery","contacts","data","isLoading","error","filter","useDeleteContactMutation","deleteContact","filteredContacts","contact","name","toLowerCase","includes","map","id","number","type","onClick","primaryColor","FormContainer","ContactsForm","useAddContactMutation","addContact","useState","setName","setNumber","handleInputChange","event","currentTarget","value","reset","onSubmit","evt","preventDefault","nanoid","normalizedFind","toLocaleLowerCase","find","Notiflix","onChange","pattern","title","required","FilterContainer","Filter","searchInputId","dispatch","useDispatch","htmlFor","filterChanges","WelcomeContainer","navigate","useNavigate","useGetCurrentUserQuery","logOut","PageContainer","PageTitle"],"sourceRoot":""}